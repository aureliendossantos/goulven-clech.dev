---
import { Image } from "astro:assets"
/**
 * Take a Github User ID, and render a link to this user account, with their avatar and name.
 * @param {string} user - What is the user's GitHub ID?
 */
interface Props {
  user: string
}

const { user } = Astro.props

/**
 * Await fetch function, to the public GitHub Api, using our fine grained GitHub personal
 * token stored in ~/.env (secret file)
 * See -> https://docs.github.com/en/rest/overview/other-authentication-methods#via-personal-access-tokens
 * TO DO : handle errors !
 */
const userData: any = await fetch(`https://api.github.com/user/${user}`, {
  headers: new Headers({
    Authorization: "Bearer " + import.meta.env.GITHUB_TOKEN,
  }),
}).then((response) => response.json())

// Got what what we needed ğŸ’° See response format ->
// https://docs.github.com/en/rest/users/users#get-a-user
const { name: userName, avatar_url: avatarUrl, html_url: userUrl } = await userData
---

<a
  href={userUrl}
  class="whitespace-nowrap font-bold not-prose text-base-light dark:text-base-dark hover:text-primary"
>
  <Image src={avatarUrl} width={24} height={24} alt="..." class="rounded-full inline mr-1 not-prose" />{
    userName
  }</a
>
